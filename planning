21/07/25
I‚Äôm building this project while learning, so there will be regular updates and improvements as I progress. 
There will be errors and trial and error early on, but this is part of my learning process.

I‚Äôm using VS Code for the frontend design and NetBeans 23 for the backend Java development.
Keeping these separate helps me stay organised while I focus on functionality first and decide on the design later.

The idea for FreshCount came directly from my workplace ‚Äî a Chinese restaurant where I‚Äôve been part of the team 
for several years.
While the kitchen runs smoothly, stock tracking is still handled manually and locally. This means:

Staff must be physically in the restaurant to check inventory.
There‚Äôs no quick way for the owner to see stock levels remotely.
Ordering and restocking decisions can be delayed if key staff aren‚Äôt on-site.

Initial Step: Speaking to the Owner
Before writing any code, I sat down with the restaurant owner to explain the vision:
A lightweight, digital inventory system that can be accessed from anywhere, at any time.

The goal is to:
Allow the owner to monitor stock remotely (even from home or while away).
Give kitchen staff an easy way to check quantities without searching shelves.
Provide real-time updates so low-stock items are spotted early.

The owner was supportive of the idea. While the kitchen doesn‚Äôt need this system to operate day to day, 
it would make stock control more efficient and flexible. For me, this 
is also a real world project that strengthens my skills in preparation for my future carreer.

There are currently around 99 items to be managed in the system, which I‚Äôm organising into different 
categories and Java classes
(e.g Meat & Seafood, Vegetables, Prepared Items). These will help structure the 
code in a maintainable way as the project grows.
here are the classes i have decided to group the items (objects) into:

ü•© Meat & Seafood  
Chicken breast 
Cooked chicken 
Spare rib meat
Pork neck 
Duck 
Cooked duck breast 
King prawn 
Squid tubes 
Crabmeat 
Shrimp 
Scallop 

ü•¨ Vegetables & Fresh Produce  
Pak choi 
Baby corn cob 
Spring onion (big heads) 
Bamboo strip small thin 
Beansprouts 
Garlic flake 
Ginger 
Peas 

ü•ü Prepared Frozen Items 
Pork gyoza
Veg gyoza 
Chicken gyoza 
Veg spring roll 
Wonton pastry 
Breaded torpedo KP 
Duck skin (pancake) 

üçú Noodles & Rice 
Rice 
Noodle
Udon 
Rice sticks 
Vietnamese rice paper 
Rice stick ban pho 

ü•´ Canned & Jarred Goods 
Chinese shredded radish (TIN) 
Cream style corn 
Lychees 
Pineapple pieces (L) 
Water chestnut 
¬Ω straw mushrooms 
Poku mushrooms 
Group fried fish 

üßÇ Spices & Seasonings
MSG (L) 
Bay leaves 
Ground white pepper 
White sugar 
Salt (L) 
Yellow ginger powder 
Curry powder (10kg) 
Red curry paste 
Green curry paste 
Wah Loong mixed spice 
Food soda 
Star anise 
Cinnamon sticks 

29/07/25
i have now put all the classes into code.
the next step for me now is to create a StockManagement system

Now that they are grouped into classes i have to establish how the classes relate to eachother (i.e. inheritance, composition etc)

i will be using composition

30/07/25
i will be creating an Inventory management file as this will allow me to 
display items from all classes and will become the centra place for 
managing stock in the future.
i have created and Inventory manager, StockCategory and Item.java 
here are what all of them do and how they relate to OOP

Encapsulation ('Item' hides its data using private fields)

Inheritance ('spiceAndSeasonings'(and all categories) inherits from 'StockCategory')

Polymorphism (treating 'spiceAndSeasonings' as a 'StockCategory')

Composition ('InventoryManager' is composed of 'StockCategory' objects)

31/07/25
i am now ready to begin design for my frontend UI on VScode

1/08/2025
The name for the website i have decided to go with is FRESH CHOICE 
my initial design for the UI was very basic and too bleak, so i decided to modernise it while keeping the simple design in mind.
the headers were originally at the top of the page, however i have no decided to mobve them onto the side 
i have now completed my front end dedign on VsCode.
now i just have to intergrate the backend and frontend together

